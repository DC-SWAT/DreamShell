# Makefile.in generated by automake 1.10.1 from Makefile.am.
# src/output/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/mpg123
pkglibdir = $(libdir)/mpg123
pkgincludedir = $(includedir)/mpg123
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-cygwin
host_triplet = sh-unknown-elf

# These are not tested and _very_ likely need work: aix alib hp os2 sgi mint

# Use that sh/perl script to generate the module entries:
#for i in alsa coreaudio esd jack nas oss portaudio pulse sdl sndio sun win32 aix alib arts hp os2 sgi mint openal dummy; do echo $i; done |
#perl -ne 'chomp; $big = uc($_); print <<EOT;
#
#if HAVE_$big
#pkglib_LTLIBRARIES += output_$_.la
#output_${_}_la_SOURCES = $_.c
#output_${_}_la_LDFLAGS = -module -no-undefined -avoid-version -export-dynamic  -export-symbols-regex '"'"'^mpg123_'"'"' \@${big}_LDFLAGS\@
#output_${_}_la_CFLAGS  = \@${big}_CFLAGS\@
#output_${_}_la_LIBADD  = \@${big}_LIBS\@ 
#endif
#EOT
#'
##am__append_1 = output_alsa.la
##am__append_2 = output_coreaudio.la
##am__append_3 = output_esd.la
##am__append_4 = output_jack.la
##am__append_5 = output_nas.la
##am__append_6 = output_oss.la
##am__append_7 = output_portaudio.la
##am__append_8 = output_pulse.la
##am__append_9 = output_sdl.la
##am__append_10 = output_sndio.la
##am__append_11 = output_sun.la
##am__append_12 = output_win32.la
##am__append_13 = output_aix.la
##am__append_14 = output_alib.la
##am__append_15 = output_arts.la
##am__append_16 = output_hp.la
##am__append_17 = output_os2.la
##am__append_18 = output_sgi.la
##am__append_19 = output_mint.la
##am__append_20 = output_openal.la
#am__append_21 = output_dummy.la
subdir = src/output
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/addrconfig.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(pkglibdir)"
pkglibLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(pkglib_LTLIBRARIES)
output_aix_la_DEPENDENCIES =
am__output_aix_la_SOURCES_DIST = aix.c
##am_output_aix_la_OBJECTS =  \
##	output_aix_la-aix.lo
output_aix_la_OBJECTS = $(am_output_aix_la_OBJECTS)
output_aix_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(output_aix_la_CFLAGS) \
	$(CFLAGS) $(output_aix_la_LDFLAGS) $(LDFLAGS) -o $@
##am_output_aix_la_rpath = -rpath \
##	$(pkglibdir)
output_alib_la_DEPENDENCIES =
am__output_alib_la_SOURCES_DIST = alib.c
##am_output_alib_la_OBJECTS =  \
##	output_alib_la-alib.lo
output_alib_la_OBJECTS = $(am_output_alib_la_OBJECTS)
output_alib_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(output_alib_la_CFLAGS) \
	$(CFLAGS) $(output_alib_la_LDFLAGS) $(LDFLAGS) -o $@
##am_output_alib_la_rpath = -rpath \
##	$(pkglibdir)
output_alsa_la_DEPENDENCIES =
am__output_alsa_la_SOURCES_DIST = alsa.c
##am_output_alsa_la_OBJECTS =  \
##	output_alsa_la-alsa.lo
output_alsa_la_OBJECTS = $(am_output_alsa_la_OBJECTS)
output_alsa_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(output_alsa_la_CFLAGS) \
	$(CFLAGS) $(output_alsa_la_LDFLAGS) $(LDFLAGS) -o $@
##am_output_alsa_la_rpath = -rpath \
##	$(pkglibdir)
output_arts_la_DEPENDENCIES =
am__output_arts_la_SOURCES_DIST = arts.c
##am_output_arts_la_OBJECTS =  \
##	output_arts_la-arts.lo
output_arts_la_OBJECTS = $(am_output_arts_la_OBJECTS)
output_arts_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(output_arts_la_CFLAGS) \
	$(CFLAGS) $(output_arts_la_LDFLAGS) $(LDFLAGS) -o $@
##am_output_arts_la_rpath = -rpath \
##	$(pkglibdir)
output_coreaudio_la_DEPENDENCIES =
am__output_coreaudio_la_SOURCES_DIST = coreaudio.c
##am_output_coreaudio_la_OBJECTS = output_coreaudio_la-coreaudio.lo
output_coreaudio_la_OBJECTS = $(am_output_coreaudio_la_OBJECTS)
output_coreaudio_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(output_coreaudio_la_CFLAGS) $(CFLAGS) \
	$(output_coreaudio_la_LDFLAGS) $(LDFLAGS) -o $@
##am_output_coreaudio_la_rpath =  \
##	-rpath $(pkglibdir)
output_dummy_la_DEPENDENCIES =
am__output_dummy_la_SOURCES_DIST = dummy.c
#am_output_dummy_la_OBJECTS =  \
#	output_dummy_la-dummy.lo
output_dummy_la_OBJECTS = $(am_output_dummy_la_OBJECTS)
output_dummy_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(output_dummy_la_CFLAGS) \
	$(CFLAGS) $(output_dummy_la_LDFLAGS) $(LDFLAGS) -o $@
#am_output_dummy_la_rpath = -rpath \
#	$(pkglibdir)
output_esd_la_DEPENDENCIES =
am__output_esd_la_SOURCES_DIST = esd.c
##am_output_esd_la_OBJECTS =  \
##	output_esd_la-esd.lo
output_esd_la_OBJECTS = $(am_output_esd_la_OBJECTS)
output_esd_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(output_esd_la_CFLAGS) \
	$(CFLAGS) $(output_esd_la_LDFLAGS) $(LDFLAGS) -o $@
##am_output_esd_la_rpath = -rpath \
##	$(pkglibdir)
output_hp_la_DEPENDENCIES =
am__output_hp_la_SOURCES_DIST = hp.c
##am_output_hp_la_OBJECTS =  \
##	output_hp_la-hp.lo
output_hp_la_OBJECTS = $(am_output_hp_la_OBJECTS)
output_hp_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(output_hp_la_CFLAGS) \
	$(CFLAGS) $(output_hp_la_LDFLAGS) $(LDFLAGS) -o $@
##am_output_hp_la_rpath = -rpath \
##	$(pkglibdir)
output_jack_la_DEPENDENCIES =
am__output_jack_la_SOURCES_DIST = jack.c
##am_output_jack_la_OBJECTS =  \
##	output_jack_la-jack.lo
output_jack_la_OBJECTS = $(am_output_jack_la_OBJECTS)
output_jack_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(output_jack_la_CFLAGS) \
	$(CFLAGS) $(output_jack_la_LDFLAGS) $(LDFLAGS) -o $@
##am_output_jack_la_rpath = -rpath \
##	$(pkglibdir)
output_mint_la_DEPENDENCIES =
am__output_mint_la_SOURCES_DIST = mint.c
##am_output_mint_la_OBJECTS =  \
##	output_mint_la-mint.lo
output_mint_la_OBJECTS = $(am_output_mint_la_OBJECTS)
output_mint_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(output_mint_la_CFLAGS) \
	$(CFLAGS) $(output_mint_la_LDFLAGS) $(LDFLAGS) -o $@
##am_output_mint_la_rpath = -rpath \
##	$(pkglibdir)
output_nas_la_DEPENDENCIES =
am__output_nas_la_SOURCES_DIST = nas.c
##am_output_nas_la_OBJECTS =  \
##	output_nas_la-nas.lo
output_nas_la_OBJECTS = $(am_output_nas_la_OBJECTS)
output_nas_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(output_nas_la_CFLAGS) \
	$(CFLAGS) $(output_nas_la_LDFLAGS) $(LDFLAGS) -o $@
##am_output_nas_la_rpath = -rpath \
##	$(pkglibdir)
output_openal_la_DEPENDENCIES =
am__output_openal_la_SOURCES_DIST = openal.c
##am_output_openal_la_OBJECTS = output_openal_la-openal.lo
output_openal_la_OBJECTS = $(am_output_openal_la_OBJECTS)
output_openal_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(output_openal_la_CFLAGS) \
	$(CFLAGS) $(output_openal_la_LDFLAGS) $(LDFLAGS) -o $@
##am_output_openal_la_rpath =  \
##	-rpath $(pkglibdir)
output_os2_la_DEPENDENCIES =
am__output_os2_la_SOURCES_DIST = os2.c
##am_output_os2_la_OBJECTS =  \
##	output_os2_la-os2.lo
output_os2_la_OBJECTS = $(am_output_os2_la_OBJECTS)
output_os2_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(output_os2_la_CFLAGS) \
	$(CFLAGS) $(output_os2_la_LDFLAGS) $(LDFLAGS) -o $@
##am_output_os2_la_rpath = -rpath \
##	$(pkglibdir)
output_oss_la_DEPENDENCIES =
am__output_oss_la_SOURCES_DIST = oss.c
##am_output_oss_la_OBJECTS =  \
##	output_oss_la-oss.lo
output_oss_la_OBJECTS = $(am_output_oss_la_OBJECTS)
output_oss_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(output_oss_la_CFLAGS) \
	$(CFLAGS) $(output_oss_la_LDFLAGS) $(LDFLAGS) -o $@
##am_output_oss_la_rpath = -rpath \
##	$(pkglibdir)
output_portaudio_la_DEPENDENCIES =
am__output_portaudio_la_SOURCES_DIST = portaudio.c
##am_output_portaudio_la_OBJECTS = output_portaudio_la-portaudio.lo
output_portaudio_la_OBJECTS = $(am_output_portaudio_la_OBJECTS)
output_portaudio_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(output_portaudio_la_CFLAGS) $(CFLAGS) \
	$(output_portaudio_la_LDFLAGS) $(LDFLAGS) -o $@
##am_output_portaudio_la_rpath =  \
##	-rpath $(pkglibdir)
output_pulse_la_DEPENDENCIES =
am__output_pulse_la_SOURCES_DIST = pulse.c
##am_output_pulse_la_OBJECTS =  \
##	output_pulse_la-pulse.lo
output_pulse_la_OBJECTS = $(am_output_pulse_la_OBJECTS)
output_pulse_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(output_pulse_la_CFLAGS) \
	$(CFLAGS) $(output_pulse_la_LDFLAGS) $(LDFLAGS) -o $@
##am_output_pulse_la_rpath = -rpath \
##	$(pkglibdir)
output_sdl_la_DEPENDENCIES =
am__output_sdl_la_SOURCES_DIST = sdl.c
##am_output_sdl_la_OBJECTS =  \
##	output_sdl_la-sdl.lo
output_sdl_la_OBJECTS = $(am_output_sdl_la_OBJECTS)
output_sdl_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(output_sdl_la_CFLAGS) \
	$(CFLAGS) $(output_sdl_la_LDFLAGS) $(LDFLAGS) -o $@
##am_output_sdl_la_rpath = -rpath \
##	$(pkglibdir)
output_sgi_la_DEPENDENCIES =
am__output_sgi_la_SOURCES_DIST = sgi.c
##am_output_sgi_la_OBJECTS =  \
##	output_sgi_la-sgi.lo
output_sgi_la_OBJECTS = $(am_output_sgi_la_OBJECTS)
output_sgi_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(output_sgi_la_CFLAGS) \
	$(CFLAGS) $(output_sgi_la_LDFLAGS) $(LDFLAGS) -o $@
##am_output_sgi_la_rpath = -rpath \
##	$(pkglibdir)
output_sndio_la_DEPENDENCIES =
am__output_sndio_la_SOURCES_DIST = sndio.c
##am_output_sndio_la_OBJECTS =  \
##	output_sndio_la-sndio.lo
output_sndio_la_OBJECTS = $(am_output_sndio_la_OBJECTS)
output_sndio_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(output_sndio_la_CFLAGS) \
	$(CFLAGS) $(output_sndio_la_LDFLAGS) $(LDFLAGS) -o $@
##am_output_sndio_la_rpath = -rpath \
##	$(pkglibdir)
output_sun_la_DEPENDENCIES =
am__output_sun_la_SOURCES_DIST = sun.c
##am_output_sun_la_OBJECTS =  \
##	output_sun_la-sun.lo
output_sun_la_OBJECTS = $(am_output_sun_la_OBJECTS)
output_sun_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(output_sun_la_CFLAGS) \
	$(CFLAGS) $(output_sun_la_LDFLAGS) $(LDFLAGS) -o $@
##am_output_sun_la_rpath = -rpath \
##	$(pkglibdir)
output_win32_la_DEPENDENCIES =
am__output_win32_la_SOURCES_DIST = win32.c
##am_output_win32_la_OBJECTS =  \
##	output_win32_la-win32.lo
output_win32_la_OBJECTS = $(am_output_win32_la_OBJECTS)
output_win32_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(output_win32_la_CFLAGS) \
	$(CFLAGS) $(output_win32_la_LDFLAGS) $(LDFLAGS) -o $@
##am_output_win32_la_rpath = -rpath \
##	$(pkglibdir)
DEFAULT_INCLUDES = -I. -I$(top_builddir)/src
depcomp = $(SHELL) $(top_srcdir)/build/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(output_aix_la_SOURCES) $(output_alib_la_SOURCES) \
	$(output_alsa_la_SOURCES) $(output_arts_la_SOURCES) \
	$(output_coreaudio_la_SOURCES) $(output_dummy_la_SOURCES) \
	$(output_esd_la_SOURCES) $(output_hp_la_SOURCES) \
	$(output_jack_la_SOURCES) $(output_mint_la_SOURCES) \
	$(output_nas_la_SOURCES) $(output_openal_la_SOURCES) \
	$(output_os2_la_SOURCES) $(output_oss_la_SOURCES) \
	$(output_portaudio_la_SOURCES) $(output_pulse_la_SOURCES) \
	$(output_sdl_la_SOURCES) $(output_sgi_la_SOURCES) \
	$(output_sndio_la_SOURCES) $(output_sun_la_SOURCES) \
	$(output_win32_la_SOURCES)
DIST_SOURCES = $(am__output_aix_la_SOURCES_DIST) \
	$(am__output_alib_la_SOURCES_DIST) \
	$(am__output_alsa_la_SOURCES_DIST) \
	$(am__output_arts_la_SOURCES_DIST) \
	$(am__output_coreaudio_la_SOURCES_DIST) \
	$(am__output_dummy_la_SOURCES_DIST) \
	$(am__output_esd_la_SOURCES_DIST) \
	$(am__output_hp_la_SOURCES_DIST) \
	$(am__output_jack_la_SOURCES_DIST) \
	$(am__output_mint_la_SOURCES_DIST) \
	$(am__output_nas_la_SOURCES_DIST) \
	$(am__output_openal_la_SOURCES_DIST) \
	$(am__output_os2_la_SOURCES_DIST) \
	$(am__output_oss_la_SOURCES_DIST) \
	$(am__output_portaudio_la_SOURCES_DIST) \
	$(am__output_pulse_la_SOURCES_DIST) \
	$(am__output_sdl_la_SOURCES_DIST) \
	$(am__output_sgi_la_SOURCES_DIST) \
	$(am__output_sndio_la_SOURCES_DIST) \
	$(am__output_sun_la_SOURCES_DIST) \
	$(am__output_win32_la_SOURCES_DIST)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /usr/local/dc/kos/kos/ds/lib/libmp3/mpg123/build/missing --run aclocal-1.10
AIX_CFLAGS = 
AIX_LDFLAGS = 
AIX_LIBS = 
ALIB_CFLAGS = 
ALIB_LDFLAGS = 
ALIB_LIBS = 
ALSA_CFLAGS = 
ALSA_LDFLAGS = 
ALSA_LIBS = -lasound
AMTAR = ${SHELL} /usr/local/dc/kos/kos/ds/lib/libmp3/mpg123/build/missing --run tar
API_VERSION = 32
AR = sh-elf-ar
ARTS_CFLAGS = 
ARTS_LDFLAGS = 
ARTS_LIBS = 
AS = as
AUTOCONF = ${SHELL} /usr/local/dc/kos/kos/ds/lib/libmp3/mpg123/build/missing --run autoconf
AUTOHEADER = ${SHELL} /usr/local/dc/kos/kos/ds/lib/libmp3/mpg123/build/missing --run autoheader
AUTOMAKE = ${SHELL} /usr/local/dc/kos/kos/ds/lib/libmp3/mpg123/build/missing --run automake-1.10
AWK = gawk
CC = /opt/toolchains/dc/sh-elf/bin/sh-elf-gcc
CCAS = /opt/toolchains/dc/sh-elf/bin/sh-elf-gcc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -O2 -fomit-frame-pointer -ml -m4-single -fno-crossjumping -I/usr/local/dc/kos/kos/../kos-ports/include -I/usr/local/dc/kos/kos/include -I/usr/local/dc/kos/kos/kernel/arch/dreamcast/include -I/usr/local/dc/kos/kos/addons/include -D_arch_dreamcast -D_arch_sub_pristine -Wall -g -fno-builtin -fno-strict-aliasing
CCDEPMODE = depmode=gcc3
CFLAGS = -O2 -fomit-frame-pointer -funroll-all-loops -finline-functions -ffast-math  -O2 -fomit-frame-pointer -ml -m4-single -fno-crossjumping -I/usr/local/dc/kos/kos/../kos-ports/include -I/usr/local/dc/kos/kos/include -I/usr/local/dc/kos/kos/kernel/arch/dreamcast/include -I/usr/local/dc/kos/kos/addons/include -D_arch_dreamcast -D_arch_sub_pristine -Wall -g -fno-builtin -fno-strict-aliasing
COREAUDIO_CFLAGS = 
COREAUDIO_LDFLAGS = 
COREAUDIO_LIBS = -framework AudioToolbox -framework AudioUnit -framework CoreServices
CPP = /opt/toolchains/dc/sh-elf/bin/sh-elf-gcc -E
CPPFLAGS =  -DOPT_GENERIC -DREAL_IS_FLOAT -DNOXFERMEM 
CXX = sh-elf-g++
CXXCPP = sh-elf-g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = cygpath -w
DECODER_LOBJ =  stringbuf.lo icy.lo icy2utf8.lo ntom.lo synth.lo synth_8bit.lo layer1.lo layer2.lo layer3.lo synth_s32.lo synth_real.lo feature.lo
DECODER_OBJ =  stringbuf.$(OBJEXT) icy.$(OBJEXT) icy2utf8.$(OBJEXT) ntom.$(OBJEXT) synth.$(OBJEXT) synth_8bit.$(OBJEXT) layer1.$(OBJEXT) layer2.$(OBJEXT) layer3.$(OBJEXT) synth_s32.$(OBJEXT) synth_real.$(OBJEXT) feature.$(OBJEXT)
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
DSYMUTIL = 
DUMMY_CFLAGS = 
DUMMY_LDFLAGS = 
DUMMY_LIBS = 
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
ESD_CFLAGS = 
ESD_LDFLAGS = 
ESD_LIBS = 
EXEC_LT_LDFLAGS = 
EXEEXT = 
F77 = 
FFLAGS = 
GREP = /usr/bin/grep
HP_CFLAGS = 
HP_LDFLAGS = 
HP_LIBS = 
INCLUDE_STDIO_H = #include <stdio.h>
INCLUDE_STDLIB_H = #include <stdlib.h>
INCLUDE_SYS_TYPE_H = #include <sys/types.h>
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
JACK_CFLAGS = 
JACK_LDFLAGS = 
JACK_LIBS = 
LDFLAGS =   -ml -m4-single -Wl,-Ttext=0x8c010000 -T/usr/local/dc/kos/kos/utils/ldscripts/shlelf.xc -nodefaultlibs -L/usr/local/dc/kos/kos/lib/dreamcast -L/usr/local/dc/kos/kos/addons/lib/dreamcast
LFS_LOBJ =  lfs_alias.lo
LIBMPG123_VERSION = 32:0:32
LIBOBJS = 
LIBS = -lm -Wl,--start-group -lkallisti -lc -lgcc -Wl,--end-group
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
LT_LDFLAGS = -export-dynamic
MAKEINFO = ${SHELL} /usr/local/dc/kos/kos/ds/lib/libmp3/mpg123/build/missing --run makeinfo
MINT_CFLAGS = 
MINT_LDFLAGS = 
MINT_LIBS = 
MKDIR_P = /usr/bin/mkdir -p
MODULE_OBJ = legacy_module.$(OBJEXT)
NAS_CFLAGS = 
NAS_LDFLAGS = 
NAS_LIBS = -laudio
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OPENAL_CFLAGS = 
OPENAL_LDFLAGS = 
OPENAL_LIBS = 
OS2_CFLAGS = 
OS2_LDFLAGS = 
OS2_LIBS = -los2me -lmmpm2 -lsocket
OSS_CFLAGS = 
OSS_LDFLAGS = 
OSS_LIBS = 
OUTPUT_CFLAGS = 
OUTPUT_LDFLAGS = 
OUTPUT_LIBS = 
OUTPUT_MOD = dummy
OUTPUT_OBJ = output/dummy.$(OBJEXT)
PACKAGE = mpg123
PACKAGE_BUGREPORT = mpg123-devel@lists.sourceforge.net
PACKAGE_NAME = mpg123
PACKAGE_STRING = mpg123 20110808000000
PACKAGE_TARNAME = mpg123
PACKAGE_VERSION = 20110808000000
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PORTAUDIO_CFLAGS = 
PORTAUDIO_LDFLAGS = 
PORTAUDIO_LIBS = -lportaudio
PULSE_CFLAGS = 
PULSE_LDFLAGS = 
PULSE_LIBS = 
RANLIB = sh-elf-ranlib
SDL_CFLAGS = 
SDL_LDFLAGS = 
SDL_LIBS = 
SED = /usr/bin/sed
SET_MAKE = 
SGI_CFLAGS = 
SGI_LDFLAGS = 
SGI_LIBS = 
SHELL = /bin/sh
SNDIO_CFLAGS = 
SNDIO_LDFLAGS = 
SNDIO_LIBS = -lsndio
STRIP = sh-elf-strip
SUN_CFLAGS = 
SUN_LDFLAGS = 
SUN_LIBS = 
VERSION = 20110808000000
WIN32_CFLAGS = 
WIN32_LDFLAGS = 
WIN32_LIBS = -lwinmm
abs_builddir = /usr/local/dc/kos/kos/ds/lib/libmp3/mpg123/src/output
abs_srcdir = /usr/local/dc/kos/kos/ds/lib/libmp3/mpg123/src/output
abs_top_builddir = /usr/local/dc/kos/kos/ds/lib/libmp3/mpg123
abs_top_srcdir = /usr/local/dc/kos/kos/ds/lib/libmp3/mpg123
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_F77 = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-cygwin
build_alias = 
build_cpu = i686
build_os = cygwin
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = sh-unknown-elf
host_alias = sh-elf
host_cpu = sh
host_os = elf
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /usr/local/dc/kos/kos/ds/lib/libmp3/mpg123/build/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /usr/bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_builddir = ../..
top_srcdir = ../..

#AM_CPPFLAGS = -I$(top_srcdir)/src/libmpg123 -I$(top_srcdir)/src
INCLUDES = $(LTDLINCL) -I$(top_builddir)/src -I$(top_builddir)/src/libmpg123 -I$(top_srcdir)/src -I$(top_srcdir)/src/libmpg123

#Do not include uneeded headers from mpg123app.h
AM_CPPFLAGS = -DBUILDING_OUTPUT_MODULES=1
#pkglib_LTLIBRARIES = $(am__append_1) \
#	$(am__append_2) $(am__append_3) \
#	$(am__append_4) $(am__append_5) \
#	$(am__append_6) $(am__append_7) \
#	$(am__append_8) $(am__append_9) \
#	$(am__append_10) $(am__append_11) \
#	$(am__append_12) $(am__append_13) \
#	$(am__append_14) $(am__append_15) \
#	$(am__append_16) $(am__append_17) \
#	$(am__append_18) $(am__append_19) \
#	$(am__append_20) $(am__append_21)
##output_alsa_la_SOURCES = alsa.c
##output_alsa_la_LDFLAGS = -module -no-undefined -avoid-version -export-dynamic  -export-symbols-regex '^mpg123_' 
##output_alsa_la_CFLAGS = 
##output_alsa_la_LIBADD = -lasound 
##output_coreaudio_la_SOURCES = coreaudio.c
##output_coreaudio_la_LDFLAGS = -module -no-undefined -avoid-version -export-dynamic  -export-symbols-regex '^mpg123_' 
##output_coreaudio_la_CFLAGS = 
##output_coreaudio_la_LIBADD = -framework AudioToolbox -framework AudioUnit -framework CoreServices 
##output_esd_la_SOURCES = esd.c
##output_esd_la_LDFLAGS = -module -no-undefined -avoid-version -export-dynamic  -export-symbols-regex '^mpg123_' 
##output_esd_la_CFLAGS = 
##output_esd_la_LIBADD =  
##output_jack_la_SOURCES = jack.c
##output_jack_la_LDFLAGS = -module -no-undefined -avoid-version -export-dynamic  -export-symbols-regex '^mpg123_' 
##output_jack_la_CFLAGS = 
##output_jack_la_LIBADD =  
##output_nas_la_SOURCES = nas.c
##output_nas_la_LDFLAGS = -module -no-undefined -avoid-version -export-dynamic  -export-symbols-regex '^mpg123_' 
##output_nas_la_CFLAGS = 
##output_nas_la_LIBADD = -laudio 
##output_oss_la_SOURCES = oss.c
##output_oss_la_LDFLAGS = -module -no-undefined -avoid-version -export-dynamic  -export-symbols-regex '^mpg123_' 
##output_oss_la_CFLAGS = 
##output_oss_la_LIBADD =  
##output_portaudio_la_SOURCES = portaudio.c
##output_portaudio_la_LDFLAGS = -module -no-undefined -avoid-version -export-dynamic  -export-symbols-regex '^mpg123_' 
##output_portaudio_la_CFLAGS = 
##output_portaudio_la_LIBADD = -lportaudio 
##output_pulse_la_SOURCES = pulse.c
##output_pulse_la_LDFLAGS = -module -no-undefined -avoid-version -export-dynamic  -export-symbols-regex '^mpg123_' 
##output_pulse_la_CFLAGS = 
##output_pulse_la_LIBADD =  
##output_sdl_la_SOURCES = sdl.c
##output_sdl_la_LDFLAGS = -module -no-undefined -avoid-version -export-dynamic  -export-symbols-regex '^mpg123_' 
##output_sdl_la_CFLAGS = 
##output_sdl_la_LIBADD =  
##output_sndio_la_SOURCES = sndio.c
##output_sndio_la_LDFLAGS = -module -no-undefined -avoid-version -export-dynamic  -export-symbols-regex '^mpg123_' 
##output_sndio_la_CFLAGS = 
##output_sndio_la_LIBADD = -lsndio 
##output_sun_la_SOURCES = sun.c
##output_sun_la_LDFLAGS = -module -no-undefined -avoid-version -export-dynamic  -export-symbols-regex '^mpg123_' 
##output_sun_la_CFLAGS = 
##output_sun_la_LIBADD =  
##output_win32_la_SOURCES = win32.c
##output_win32_la_LDFLAGS = -module -no-undefined -avoid-version -export-dynamic  -export-symbols-regex '^mpg123_' 
##output_win32_la_CFLAGS = 
##output_win32_la_LIBADD = -lwinmm 
##output_aix_la_SOURCES = aix.c
##output_aix_la_LDFLAGS = -module -no-undefined -avoid-version -export-dynamic  -export-symbols-regex '^mpg123_' 
##output_aix_la_CFLAGS = 
##output_aix_la_LIBADD =  
##output_alib_la_SOURCES = alib.c
##output_alib_la_LDFLAGS = -module -no-undefined -avoid-version -export-dynamic  -export-symbols-regex '^mpg123_' 
##output_alib_la_CFLAGS = 
##output_alib_la_LIBADD =  
##output_arts_la_SOURCES = arts.c
##output_arts_la_LDFLAGS = -module -no-undefined -avoid-version -export-dynamic  -export-symbols-regex '^mpg123_' 
##output_arts_la_CFLAGS = 
##output_arts_la_LIBADD =  
##output_hp_la_SOURCES = hp.c
##output_hp_la_LDFLAGS = -module -no-undefined -avoid-version -export-dynamic  -export-symbols-regex '^mpg123_' 
##output_hp_la_CFLAGS = 
##output_hp_la_LIBADD =  
##output_os2_la_SOURCES = os2.c
##output_os2_la_LDFLAGS = -module -no-undefined -avoid-version -export-dynamic  -export-symbols-regex '^mpg123_' 
##output_os2_la_CFLAGS = 
##output_os2_la_LIBADD = -los2me -lmmpm2 -lsocket 
##output_sgi_la_SOURCES = sgi.c
##output_sgi_la_LDFLAGS = -module -no-undefined -avoid-version -export-dynamic  -export-symbols-regex '^mpg123_' 
##output_sgi_la_CFLAGS = 
##output_sgi_la_LIBADD =  
##output_mint_la_SOURCES = mint.c
##output_mint_la_LDFLAGS = -module -no-undefined -avoid-version -export-dynamic  -export-symbols-regex '^mpg123_' 
##output_mint_la_CFLAGS = 
##output_mint_la_LIBADD =  
##output_openal_la_SOURCES = openal.c
##output_openal_la_LDFLAGS = -module -no-undefined -avoid-version -export-dynamic  -export-symbols-regex '^mpg123_' 
##output_openal_la_CFLAGS = 
##output_openal_la_LIBADD =  
#output_dummy_la_SOURCES = dummy.c
#output_dummy_la_LDFLAGS = -module -no-undefined -avoid-version -export-dynamic  -export-symbols-regex '^mpg123_' 
#output_dummy_la_CFLAGS = 
#output_dummy_la_LIBADD =  

# Static build of one module only.
AM_CFLAGS = 
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/output/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/output/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-pkglibLTLIBRARIES: $(pkglib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(pkglibdir)" || $(MKDIR_P) "$(DESTDIR)$(pkglibdir)"
	@list='$(pkglib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(pkglibLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(pkglibdir)/$$f'"; \
	    $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(pkglibLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(pkglibdir)/$$f"; \
	  else :; fi; \
	done

uninstall-pkglibLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(pkglib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(pkglibdir)/$$p'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(pkglibdir)/$$p"; \
	done

clean-pkglibLTLIBRARIES:
	-test -z "$(pkglib_LTLIBRARIES)" || rm -f $(pkglib_LTLIBRARIES)
	@list='$(pkglib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
output_aix.la: $(output_aix_la_OBJECTS) $(output_aix_la_DEPENDENCIES) 
	$(output_aix_la_LINK) $(am_output_aix_la_rpath) $(output_aix_la_OBJECTS) $(output_aix_la_LIBADD) $(LIBS)
output_alib.la: $(output_alib_la_OBJECTS) $(output_alib_la_DEPENDENCIES) 
	$(output_alib_la_LINK) $(am_output_alib_la_rpath) $(output_alib_la_OBJECTS) $(output_alib_la_LIBADD) $(LIBS)
output_alsa.la: $(output_alsa_la_OBJECTS) $(output_alsa_la_DEPENDENCIES) 
	$(output_alsa_la_LINK) $(am_output_alsa_la_rpath) $(output_alsa_la_OBJECTS) $(output_alsa_la_LIBADD) $(LIBS)
output_arts.la: $(output_arts_la_OBJECTS) $(output_arts_la_DEPENDENCIES) 
	$(output_arts_la_LINK) $(am_output_arts_la_rpath) $(output_arts_la_OBJECTS) $(output_arts_la_LIBADD) $(LIBS)
output_coreaudio.la: $(output_coreaudio_la_OBJECTS) $(output_coreaudio_la_DEPENDENCIES) 
	$(output_coreaudio_la_LINK) $(am_output_coreaudio_la_rpath) $(output_coreaudio_la_OBJECTS) $(output_coreaudio_la_LIBADD) $(LIBS)
output_dummy.la: $(output_dummy_la_OBJECTS) $(output_dummy_la_DEPENDENCIES) 
	$(output_dummy_la_LINK) $(am_output_dummy_la_rpath) $(output_dummy_la_OBJECTS) $(output_dummy_la_LIBADD) $(LIBS)
output_esd.la: $(output_esd_la_OBJECTS) $(output_esd_la_DEPENDENCIES) 
	$(output_esd_la_LINK) $(am_output_esd_la_rpath) $(output_esd_la_OBJECTS) $(output_esd_la_LIBADD) $(LIBS)
output_hp.la: $(output_hp_la_OBJECTS) $(output_hp_la_DEPENDENCIES) 
	$(output_hp_la_LINK) $(am_output_hp_la_rpath) $(output_hp_la_OBJECTS) $(output_hp_la_LIBADD) $(LIBS)
output_jack.la: $(output_jack_la_OBJECTS) $(output_jack_la_DEPENDENCIES) 
	$(output_jack_la_LINK) $(am_output_jack_la_rpath) $(output_jack_la_OBJECTS) $(output_jack_la_LIBADD) $(LIBS)
output_mint.la: $(output_mint_la_OBJECTS) $(output_mint_la_DEPENDENCIES) 
	$(output_mint_la_LINK) $(am_output_mint_la_rpath) $(output_mint_la_OBJECTS) $(output_mint_la_LIBADD) $(LIBS)
output_nas.la: $(output_nas_la_OBJECTS) $(output_nas_la_DEPENDENCIES) 
	$(output_nas_la_LINK) $(am_output_nas_la_rpath) $(output_nas_la_OBJECTS) $(output_nas_la_LIBADD) $(LIBS)
output_openal.la: $(output_openal_la_OBJECTS) $(output_openal_la_DEPENDENCIES) 
	$(output_openal_la_LINK) $(am_output_openal_la_rpath) $(output_openal_la_OBJECTS) $(output_openal_la_LIBADD) $(LIBS)
output_os2.la: $(output_os2_la_OBJECTS) $(output_os2_la_DEPENDENCIES) 
	$(output_os2_la_LINK) $(am_output_os2_la_rpath) $(output_os2_la_OBJECTS) $(output_os2_la_LIBADD) $(LIBS)
output_oss.la: $(output_oss_la_OBJECTS) $(output_oss_la_DEPENDENCIES) 
	$(output_oss_la_LINK) $(am_output_oss_la_rpath) $(output_oss_la_OBJECTS) $(output_oss_la_LIBADD) $(LIBS)
output_portaudio.la: $(output_portaudio_la_OBJECTS) $(output_portaudio_la_DEPENDENCIES) 
	$(output_portaudio_la_LINK) $(am_output_portaudio_la_rpath) $(output_portaudio_la_OBJECTS) $(output_portaudio_la_LIBADD) $(LIBS)
output_pulse.la: $(output_pulse_la_OBJECTS) $(output_pulse_la_DEPENDENCIES) 
	$(output_pulse_la_LINK) $(am_output_pulse_la_rpath) $(output_pulse_la_OBJECTS) $(output_pulse_la_LIBADD) $(LIBS)
output_sdl.la: $(output_sdl_la_OBJECTS) $(output_sdl_la_DEPENDENCIES) 
	$(output_sdl_la_LINK) $(am_output_sdl_la_rpath) $(output_sdl_la_OBJECTS) $(output_sdl_la_LIBADD) $(LIBS)
output_sgi.la: $(output_sgi_la_OBJECTS) $(output_sgi_la_DEPENDENCIES) 
	$(output_sgi_la_LINK) $(am_output_sgi_la_rpath) $(output_sgi_la_OBJECTS) $(output_sgi_la_LIBADD) $(LIBS)
output_sndio.la: $(output_sndio_la_OBJECTS) $(output_sndio_la_DEPENDENCIES) 
	$(output_sndio_la_LINK) $(am_output_sndio_la_rpath) $(output_sndio_la_OBJECTS) $(output_sndio_la_LIBADD) $(LIBS)
output_sun.la: $(output_sun_la_OBJECTS) $(output_sun_la_DEPENDENCIES) 
	$(output_sun_la_LINK) $(am_output_sun_la_rpath) $(output_sun_la_OBJECTS) $(output_sun_la_LIBADD) $(LIBS)
output_win32.la: $(output_win32_la_OBJECTS) $(output_win32_la_DEPENDENCIES) 
	$(output_win32_la_LINK) $(am_output_win32_la_rpath) $(output_win32_la_OBJECTS) $(output_win32_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/output_aix_la-aix.Plo
include ./$(DEPDIR)/output_alib_la-alib.Plo
include ./$(DEPDIR)/output_alsa_la-alsa.Plo
include ./$(DEPDIR)/output_arts_la-arts.Plo
include ./$(DEPDIR)/output_coreaudio_la-coreaudio.Plo
include ./$(DEPDIR)/output_dummy_la-dummy.Plo
include ./$(DEPDIR)/output_esd_la-esd.Plo
include ./$(DEPDIR)/output_hp_la-hp.Plo
include ./$(DEPDIR)/output_jack_la-jack.Plo
include ./$(DEPDIR)/output_mint_la-mint.Plo
include ./$(DEPDIR)/output_nas_la-nas.Plo
include ./$(DEPDIR)/output_openal_la-openal.Plo
include ./$(DEPDIR)/output_os2_la-os2.Plo
include ./$(DEPDIR)/output_oss_la-oss.Plo
include ./$(DEPDIR)/output_portaudio_la-portaudio.Plo
include ./$(DEPDIR)/output_pulse_la-pulse.Plo
include ./$(DEPDIR)/output_sdl_la-sdl.Plo
include ./$(DEPDIR)/output_sgi_la-sgi.Plo
include ./$(DEPDIR)/output_sndio_la-sndio.Plo
include ./$(DEPDIR)/output_sun_la-sun.Plo
include ./$(DEPDIR)/output_win32_la-win32.Plo

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

output_aix_la-aix.lo: aix.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_aix_la_CFLAGS) $(CFLAGS) -MT output_aix_la-aix.lo -MD -MP -MF $(DEPDIR)/output_aix_la-aix.Tpo -c -o output_aix_la-aix.lo `test -f 'aix.c' || echo '$(srcdir)/'`aix.c
	mv -f $(DEPDIR)/output_aix_la-aix.Tpo $(DEPDIR)/output_aix_la-aix.Plo
#	source='aix.c' object='output_aix_la-aix.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_aix_la_CFLAGS) $(CFLAGS) -c -o output_aix_la-aix.lo `test -f 'aix.c' || echo '$(srcdir)/'`aix.c

output_alib_la-alib.lo: alib.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_alib_la_CFLAGS) $(CFLAGS) -MT output_alib_la-alib.lo -MD -MP -MF $(DEPDIR)/output_alib_la-alib.Tpo -c -o output_alib_la-alib.lo `test -f 'alib.c' || echo '$(srcdir)/'`alib.c
	mv -f $(DEPDIR)/output_alib_la-alib.Tpo $(DEPDIR)/output_alib_la-alib.Plo
#	source='alib.c' object='output_alib_la-alib.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_alib_la_CFLAGS) $(CFLAGS) -c -o output_alib_la-alib.lo `test -f 'alib.c' || echo '$(srcdir)/'`alib.c

output_alsa_la-alsa.lo: alsa.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_alsa_la_CFLAGS) $(CFLAGS) -MT output_alsa_la-alsa.lo -MD -MP -MF $(DEPDIR)/output_alsa_la-alsa.Tpo -c -o output_alsa_la-alsa.lo `test -f 'alsa.c' || echo '$(srcdir)/'`alsa.c
	mv -f $(DEPDIR)/output_alsa_la-alsa.Tpo $(DEPDIR)/output_alsa_la-alsa.Plo
#	source='alsa.c' object='output_alsa_la-alsa.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_alsa_la_CFLAGS) $(CFLAGS) -c -o output_alsa_la-alsa.lo `test -f 'alsa.c' || echo '$(srcdir)/'`alsa.c

output_arts_la-arts.lo: arts.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_arts_la_CFLAGS) $(CFLAGS) -MT output_arts_la-arts.lo -MD -MP -MF $(DEPDIR)/output_arts_la-arts.Tpo -c -o output_arts_la-arts.lo `test -f 'arts.c' || echo '$(srcdir)/'`arts.c
	mv -f $(DEPDIR)/output_arts_la-arts.Tpo $(DEPDIR)/output_arts_la-arts.Plo
#	source='arts.c' object='output_arts_la-arts.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_arts_la_CFLAGS) $(CFLAGS) -c -o output_arts_la-arts.lo `test -f 'arts.c' || echo '$(srcdir)/'`arts.c

output_coreaudio_la-coreaudio.lo: coreaudio.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_coreaudio_la_CFLAGS) $(CFLAGS) -MT output_coreaudio_la-coreaudio.lo -MD -MP -MF $(DEPDIR)/output_coreaudio_la-coreaudio.Tpo -c -o output_coreaudio_la-coreaudio.lo `test -f 'coreaudio.c' || echo '$(srcdir)/'`coreaudio.c
	mv -f $(DEPDIR)/output_coreaudio_la-coreaudio.Tpo $(DEPDIR)/output_coreaudio_la-coreaudio.Plo
#	source='coreaudio.c' object='output_coreaudio_la-coreaudio.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_coreaudio_la_CFLAGS) $(CFLAGS) -c -o output_coreaudio_la-coreaudio.lo `test -f 'coreaudio.c' || echo '$(srcdir)/'`coreaudio.c

output_dummy_la-dummy.lo: dummy.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_dummy_la_CFLAGS) $(CFLAGS) -MT output_dummy_la-dummy.lo -MD -MP -MF $(DEPDIR)/output_dummy_la-dummy.Tpo -c -o output_dummy_la-dummy.lo `test -f 'dummy.c' || echo '$(srcdir)/'`dummy.c
	mv -f $(DEPDIR)/output_dummy_la-dummy.Tpo $(DEPDIR)/output_dummy_la-dummy.Plo
#	source='dummy.c' object='output_dummy_la-dummy.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_dummy_la_CFLAGS) $(CFLAGS) -c -o output_dummy_la-dummy.lo `test -f 'dummy.c' || echo '$(srcdir)/'`dummy.c

output_esd_la-esd.lo: esd.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_esd_la_CFLAGS) $(CFLAGS) -MT output_esd_la-esd.lo -MD -MP -MF $(DEPDIR)/output_esd_la-esd.Tpo -c -o output_esd_la-esd.lo `test -f 'esd.c' || echo '$(srcdir)/'`esd.c
	mv -f $(DEPDIR)/output_esd_la-esd.Tpo $(DEPDIR)/output_esd_la-esd.Plo
#	source='esd.c' object='output_esd_la-esd.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_esd_la_CFLAGS) $(CFLAGS) -c -o output_esd_la-esd.lo `test -f 'esd.c' || echo '$(srcdir)/'`esd.c

output_hp_la-hp.lo: hp.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_hp_la_CFLAGS) $(CFLAGS) -MT output_hp_la-hp.lo -MD -MP -MF $(DEPDIR)/output_hp_la-hp.Tpo -c -o output_hp_la-hp.lo `test -f 'hp.c' || echo '$(srcdir)/'`hp.c
	mv -f $(DEPDIR)/output_hp_la-hp.Tpo $(DEPDIR)/output_hp_la-hp.Plo
#	source='hp.c' object='output_hp_la-hp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_hp_la_CFLAGS) $(CFLAGS) -c -o output_hp_la-hp.lo `test -f 'hp.c' || echo '$(srcdir)/'`hp.c

output_jack_la-jack.lo: jack.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_jack_la_CFLAGS) $(CFLAGS) -MT output_jack_la-jack.lo -MD -MP -MF $(DEPDIR)/output_jack_la-jack.Tpo -c -o output_jack_la-jack.lo `test -f 'jack.c' || echo '$(srcdir)/'`jack.c
	mv -f $(DEPDIR)/output_jack_la-jack.Tpo $(DEPDIR)/output_jack_la-jack.Plo
#	source='jack.c' object='output_jack_la-jack.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_jack_la_CFLAGS) $(CFLAGS) -c -o output_jack_la-jack.lo `test -f 'jack.c' || echo '$(srcdir)/'`jack.c

output_mint_la-mint.lo: mint.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_mint_la_CFLAGS) $(CFLAGS) -MT output_mint_la-mint.lo -MD -MP -MF $(DEPDIR)/output_mint_la-mint.Tpo -c -o output_mint_la-mint.lo `test -f 'mint.c' || echo '$(srcdir)/'`mint.c
	mv -f $(DEPDIR)/output_mint_la-mint.Tpo $(DEPDIR)/output_mint_la-mint.Plo
#	source='mint.c' object='output_mint_la-mint.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_mint_la_CFLAGS) $(CFLAGS) -c -o output_mint_la-mint.lo `test -f 'mint.c' || echo '$(srcdir)/'`mint.c

output_nas_la-nas.lo: nas.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_nas_la_CFLAGS) $(CFLAGS) -MT output_nas_la-nas.lo -MD -MP -MF $(DEPDIR)/output_nas_la-nas.Tpo -c -o output_nas_la-nas.lo `test -f 'nas.c' || echo '$(srcdir)/'`nas.c
	mv -f $(DEPDIR)/output_nas_la-nas.Tpo $(DEPDIR)/output_nas_la-nas.Plo
#	source='nas.c' object='output_nas_la-nas.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_nas_la_CFLAGS) $(CFLAGS) -c -o output_nas_la-nas.lo `test -f 'nas.c' || echo '$(srcdir)/'`nas.c

output_openal_la-openal.lo: openal.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_openal_la_CFLAGS) $(CFLAGS) -MT output_openal_la-openal.lo -MD -MP -MF $(DEPDIR)/output_openal_la-openal.Tpo -c -o output_openal_la-openal.lo `test -f 'openal.c' || echo '$(srcdir)/'`openal.c
	mv -f $(DEPDIR)/output_openal_la-openal.Tpo $(DEPDIR)/output_openal_la-openal.Plo
#	source='openal.c' object='output_openal_la-openal.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_openal_la_CFLAGS) $(CFLAGS) -c -o output_openal_la-openal.lo `test -f 'openal.c' || echo '$(srcdir)/'`openal.c

output_os2_la-os2.lo: os2.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_os2_la_CFLAGS) $(CFLAGS) -MT output_os2_la-os2.lo -MD -MP -MF $(DEPDIR)/output_os2_la-os2.Tpo -c -o output_os2_la-os2.lo `test -f 'os2.c' || echo '$(srcdir)/'`os2.c
	mv -f $(DEPDIR)/output_os2_la-os2.Tpo $(DEPDIR)/output_os2_la-os2.Plo
#	source='os2.c' object='output_os2_la-os2.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_os2_la_CFLAGS) $(CFLAGS) -c -o output_os2_la-os2.lo `test -f 'os2.c' || echo '$(srcdir)/'`os2.c

output_oss_la-oss.lo: oss.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_oss_la_CFLAGS) $(CFLAGS) -MT output_oss_la-oss.lo -MD -MP -MF $(DEPDIR)/output_oss_la-oss.Tpo -c -o output_oss_la-oss.lo `test -f 'oss.c' || echo '$(srcdir)/'`oss.c
	mv -f $(DEPDIR)/output_oss_la-oss.Tpo $(DEPDIR)/output_oss_la-oss.Plo
#	source='oss.c' object='output_oss_la-oss.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_oss_la_CFLAGS) $(CFLAGS) -c -o output_oss_la-oss.lo `test -f 'oss.c' || echo '$(srcdir)/'`oss.c

output_portaudio_la-portaudio.lo: portaudio.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_portaudio_la_CFLAGS) $(CFLAGS) -MT output_portaudio_la-portaudio.lo -MD -MP -MF $(DEPDIR)/output_portaudio_la-portaudio.Tpo -c -o output_portaudio_la-portaudio.lo `test -f 'portaudio.c' || echo '$(srcdir)/'`portaudio.c
	mv -f $(DEPDIR)/output_portaudio_la-portaudio.Tpo $(DEPDIR)/output_portaudio_la-portaudio.Plo
#	source='portaudio.c' object='output_portaudio_la-portaudio.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_portaudio_la_CFLAGS) $(CFLAGS) -c -o output_portaudio_la-portaudio.lo `test -f 'portaudio.c' || echo '$(srcdir)/'`portaudio.c

output_pulse_la-pulse.lo: pulse.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_pulse_la_CFLAGS) $(CFLAGS) -MT output_pulse_la-pulse.lo -MD -MP -MF $(DEPDIR)/output_pulse_la-pulse.Tpo -c -o output_pulse_la-pulse.lo `test -f 'pulse.c' || echo '$(srcdir)/'`pulse.c
	mv -f $(DEPDIR)/output_pulse_la-pulse.Tpo $(DEPDIR)/output_pulse_la-pulse.Plo
#	source='pulse.c' object='output_pulse_la-pulse.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_pulse_la_CFLAGS) $(CFLAGS) -c -o output_pulse_la-pulse.lo `test -f 'pulse.c' || echo '$(srcdir)/'`pulse.c

output_sdl_la-sdl.lo: sdl.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_sdl_la_CFLAGS) $(CFLAGS) -MT output_sdl_la-sdl.lo -MD -MP -MF $(DEPDIR)/output_sdl_la-sdl.Tpo -c -o output_sdl_la-sdl.lo `test -f 'sdl.c' || echo '$(srcdir)/'`sdl.c
	mv -f $(DEPDIR)/output_sdl_la-sdl.Tpo $(DEPDIR)/output_sdl_la-sdl.Plo
#	source='sdl.c' object='output_sdl_la-sdl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_sdl_la_CFLAGS) $(CFLAGS) -c -o output_sdl_la-sdl.lo `test -f 'sdl.c' || echo '$(srcdir)/'`sdl.c

output_sgi_la-sgi.lo: sgi.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_sgi_la_CFLAGS) $(CFLAGS) -MT output_sgi_la-sgi.lo -MD -MP -MF $(DEPDIR)/output_sgi_la-sgi.Tpo -c -o output_sgi_la-sgi.lo `test -f 'sgi.c' || echo '$(srcdir)/'`sgi.c
	mv -f $(DEPDIR)/output_sgi_la-sgi.Tpo $(DEPDIR)/output_sgi_la-sgi.Plo
#	source='sgi.c' object='output_sgi_la-sgi.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_sgi_la_CFLAGS) $(CFLAGS) -c -o output_sgi_la-sgi.lo `test -f 'sgi.c' || echo '$(srcdir)/'`sgi.c

output_sndio_la-sndio.lo: sndio.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_sndio_la_CFLAGS) $(CFLAGS) -MT output_sndio_la-sndio.lo -MD -MP -MF $(DEPDIR)/output_sndio_la-sndio.Tpo -c -o output_sndio_la-sndio.lo `test -f 'sndio.c' || echo '$(srcdir)/'`sndio.c
	mv -f $(DEPDIR)/output_sndio_la-sndio.Tpo $(DEPDIR)/output_sndio_la-sndio.Plo
#	source='sndio.c' object='output_sndio_la-sndio.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_sndio_la_CFLAGS) $(CFLAGS) -c -o output_sndio_la-sndio.lo `test -f 'sndio.c' || echo '$(srcdir)/'`sndio.c

output_sun_la-sun.lo: sun.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_sun_la_CFLAGS) $(CFLAGS) -MT output_sun_la-sun.lo -MD -MP -MF $(DEPDIR)/output_sun_la-sun.Tpo -c -o output_sun_la-sun.lo `test -f 'sun.c' || echo '$(srcdir)/'`sun.c
	mv -f $(DEPDIR)/output_sun_la-sun.Tpo $(DEPDIR)/output_sun_la-sun.Plo
#	source='sun.c' object='output_sun_la-sun.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_sun_la_CFLAGS) $(CFLAGS) -c -o output_sun_la-sun.lo `test -f 'sun.c' || echo '$(srcdir)/'`sun.c

output_win32_la-win32.lo: win32.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_win32_la_CFLAGS) $(CFLAGS) -MT output_win32_la-win32.lo -MD -MP -MF $(DEPDIR)/output_win32_la-win32.Tpo -c -o output_win32_la-win32.lo `test -f 'win32.c' || echo '$(srcdir)/'`win32.c
	mv -f $(DEPDIR)/output_win32_la-win32.Tpo $(DEPDIR)/output_win32_la-win32.Plo
#	source='win32.c' object='output_win32_la-win32.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(output_win32_la_CFLAGS) $(CFLAGS) -c -o output_win32_la-win32.lo `test -f 'win32.c' || echo '$(srcdir)/'`win32.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(pkglibdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
#install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-pkglibLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am: install-pkglibLTLIBRARIES

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-pkglibLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-pkglibLTLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-pkglibLTLIBRARIES \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-pkglibLTLIBRARIES


all: dummy.$(OBJEXT)

# No installation happening from here
install: all
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
